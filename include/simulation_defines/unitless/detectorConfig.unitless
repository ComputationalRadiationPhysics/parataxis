#pragma once

#include "detector/PhotonDetectorImpl.hpp"
#include "detector/NoDetectorImpl.hpp"
#include "detector/CountParticles.hpp"

namespace PMacc { namespace traits {

    template<>
    struct Resolve<xrt::detector::particleHandlers::CountParticles>
    {
        using type  = xrt::detector::CountParticles<>;
    };

    template<>
    struct Resolve<xrt::detector::PhotonDetector>
    {
        using Config = xrt::detector::PhotonDetector;
        using type  = xrt::detector::PhotonDetectorImpl<Config, xrt::PIC_Photons>;
    };

    template<>
    struct Resolve<xrt::detector::NoDetector>
    {
        using type  = xrt::detector::NoDetectorImpl;
    };

}}
