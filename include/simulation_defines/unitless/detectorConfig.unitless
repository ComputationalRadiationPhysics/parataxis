/**
 * Copyright 2015-2016 Alexander Grund
 *
 * This file is part of ParaTAXIS.
 *
 * ParaTAXIS is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ParaTAXIS is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ParaTAXIS.  If not, see <http://www.gnu.org/licenses/>.
 */
 
#pragma once

#include "detector/PhotonDetectorImpl.hpp"
#include "detector/NoDetectorImpl.hpp"
#include "detector/CountParticles.hpp"
#include "detector/AddWaveParticles.hpp"

namespace PMacc { namespace traits {

    template<>
    struct Resolve<xrt::detector::particleHandlers::CountParticles>
    {
        using type  = xrt::detector::CountParticles<>;
    };

    template<>
    struct Resolve<xrt::detector::particleHandlers::AddWaveParticles>
    {
        using type  = xrt::detector::AddWaveParticles<>;
    };

    template<>
    struct Resolve<xrt::detector::PhotonDetector>
    {
        using Config = xrt::detector::PhotonDetector;
        using type  = xrt::detector::PhotonDetectorImpl<Config, xrt::PIC_Photons>;
    };

    template<>
    struct Resolve<xrt::detector::NoDetector>
    {
        using type  = xrt::detector::NoDetectorImpl;
    };

}}
