#pragma once

#include "simulation_defines.hpp"
#include "particles/Particles.hpp"
#include "particles/XrtParticleDescription.hpp"
#include <compileTime/conversion/MakeSeq.hpp>
#include <boost/mpl/vector.hpp>
#include <boost/mpl/string.hpp>

namespace xrt {

    /*########################### define particle attributes #####################*/

    /** describe attributes of a particle*/
    typedef PMacc::MakeSeq<
            position<position_pic>,
            momentum,
            globalId,
            creationTime,
            startPhase
    >::type DefaultParticleAttributes;

    typedef PMacc::MakeSeq<
            DefaultParticleAttributes
    >::type DefaultAttributesSeq;

    /*########################### end particle attributes ########################*/

    /*########################### define species #################################*/

    typedef bmpl::vector<
            particlePusher<particles::pusher::Photon>,
            particleScatterer<particles::scatterer::Reflection>
    > ParticleFlagsPhotons;

    /*define species electrons*/
    typedef Particles<
        xrt::particles::ParticleDescription<
            bmpl::string<'p'>,
            SuperCellSize,
            DefaultAttributesSeq,
            ParticleFlagsPhotons
        >
    > PIC_Photons;

}  // namespace xrt
