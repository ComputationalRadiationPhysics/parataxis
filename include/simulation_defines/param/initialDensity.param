#pragma once

#include "math/vector/compile-time/UInt32.hpp"

namespace xrt {
namespace initialDensity {

    /** Config for the Line generator */
    struct LineConfig
    {
        /** Dimension which the line/plan cuts */
        static constexpr uint32_t nDim = 0;
        /** Offset where the line/plane is drawn */
        static constexpr size_t offset = 50;
        /** Value used */
        static constexpr float_64 value = 1;
    };

    struct CuboidConfig
    {
        using Offset = PMacc::math::CT::UInt32<
                /** Offset in x-direction */
                40
                /** Offset in y-direction */,
                50
                /** Offset in z-direction */,
                60
                >;
        using Size = PMacc::math::CT::UInt32<
                /** Size in x-direction */
                30
                /** Size in y-direction */,
                40
                /** Size in z-direction */,
                50
                >;
        /** Value used */
        static constexpr float_64 value = 1;
    };

    namespace AvailableGenerators{
        /** List of possible generators */
        struct Line;
        struct Cuboid;
    };

    using Generator =
            /** Generator used */
            AvailableGenerators::Cuboid;

}  // namespace initialDensity
}  // namespace xrt
