#pragma once

#include "math/vector/compile-time/UInt32.hpp"

namespace xrt {
namespace initialDensity {

    namespace AvailableGenerators{
        /* List of possible generators: */

        /** 2 slits of the same width and infinite height,
         *  extending perpendicular to x-axis in 3D */
        struct DoubleSlit{
            /** (3D only) offset in cells into the room (X-direction) */
            static constexpr uint32_t roomPos = 10;
            /** (3D only) width in cells of the volume containing the slit (size in X) */
            static constexpr uint32_t roomWidth = 1;
            /** Offset in cells of the slits */
            static constexpr uint32_t offset = (PARAM_NUM_CELLS - PARAM_SLIT_SPACING) / 2;
            /** Width in cells of the slits */
            static constexpr uint32_t width = PARAM_SLIT_WIDTH;
            /** Spacing in cells between the slits */
            static constexpr uint32_t spacing = PARAM_SLIT_SPACING;
            /** Value used */
            static constexpr float_64 value = 1;
        };
    };

    using Generator =
            /** Generator used */
            AvailableGenerators::DoubleSlit;

}  // namespace initialDensity
}  // namespace xrt
