# Description
example:
  name:        HDF5Test
  author:      Alexander Grund

  description: |
               Test HDF5 writing, loading and checkpointing
               Note for the restart validation: Particle Ids and particle placement on restart
               is not deterministic. Hence it can only be checked, that a particle with a given value
               is there and when IDs are checked, all particles must take the same path, or e.g. a particle
               with ID x might have already left, where in the restart that particle takes a longer path.

compile:
  - cmakeFlags:
        - 0-2
        
aliases:
  validateOpenPMD: &validateOpenPMD
    - |
        set +e
        output=$(find "${TEST_SIMOUTPUT_PATH}/checkpoints" -type f -name "*.h5" -print0 | xargs -0 -n 1 -r python "${TEST_INSTALL_PATH}/buildSystem/checkOpenPMD_h5.py" -i )
        result=$?
        echo "$output"
        [ $result -eq 0 ] && [[ "$output" != *"Error:"* ]]

# Run-Time Tests
tests:
  - name: Checkpoint
    description: Test that checkpointing works
    cmakeFlag: 0
    cfgFile:   0001gpus.cfg
    post-run: &cpPostRun
        - \[ $(ls "${TEST_SIMOUTPUT_PATH}"/checkpoints/hdf5_checkpoint_*.h5 | wc -l) -eq 3 \]
        - \[ $(ls "${TEST_SIMOUTPUT_PATH}"/checkpoints/PhotonDetector_checkpoint_*.h5 | wc -l) -eq 3 \]
        - *validateOpenPMD
        - python3 "${TEST_INSTALL_PATH}/testData/validateCheckpoint.py"
  - name: Restart
    description: Restart from the last checkpoint of Checkpoint
    cmakeFlag: 0
    cfgFile:   0001gpusRestart.cfg
    dependency: Checkpoint
    post-run: &restartPostRun
        - \[ $(ls "${TEST_SIMOUTPUT_PATH}"/checkpoints/hdf5_checkpoint_*.h5 | wc -l) -eq 2 \]
        - \[ $(ls "${TEST_SIMOUTPUT_PATH}"/checkpoints/PhotonDetector_checkpoint_*.h5 | wc -l) -eq 2 \]
        - *validateOpenPMD
        - python3 "${TEST_INSTALL_PATH}/testData/validateRestart.py"
  - name: CheckpointCt
    description: Test only that checkpointing works (ParticleCounter)
    cmakeFlag: 1
    cfgFile:   0001gpus.cfg
    post-run: *cpPostRun
  - name: RestartCt
    description: Restart from the last checkpoint of CheckpointCt (ParticleCounter)
    cmakeFlag: 1
    cfgFile:   0001gpusRestart.cfg
    dependency: CheckpointCt
    post-run: *restartPostRun
  - name: HDF5FieldInterpolator
    description: Uses HDF5 files to interpolate the field between timesteps
    cmakeFlag: 2
    cfgFile:   0001gpusHDF5Field.cfg
    pre-run: &createHDF5Field
        - |
            TESTDATA_PATH="${TEST_INSTALL_PATH}/testData"
            TESTDATA_OUT_PATH="${TESTDATA_PATH}/$TEST_NAME"
            mkdir "${TESTDATA_OUT_PATH}"
            python3 "${TESTDATA_PATH}/createHDF5Filesets.py" --createDensity --folder "${TESTDATA_OUT_PATH}" --size ${TEST_GRID_SIZE} --cellSize "4e-9" "4e-9" "4e-9" --dt "2e-16" --time "1.5e-15"
            # For laser: CellSize is multiplied with 4 and dt with 8, 130 timesteps long
            python3 "${TESTDATA_PATH}/createHDF5Filesets.py" --createLaser --folder "${TESTDATA_OUT_PATH}" --size ${TEST_GRID_SIZE} --cellSize "16e-9" "16e-9" "16e-9" --dt "10.64e-17" --time "1.5e-15"
            # Check for openPMD conformance
            echo "Validating generated test files"
            find "${TESTDATA_OUT_PATH}" -type f -name "*.h5" -print0 | xargs -0 -n 1 -r python "${TEST_INSTALL_PATH}/buildSystem/checkOpenPMD_h5.py" -i 
    post-run: &validateHDF5Field
        - *validateOpenPMD
        - python3 "${TEST_INSTALL_PATH}/testData/validateCheckpoint.py"
        - python3 "${TEST_INSTALL_PATH}/testData/validateFieldInterpolator.py"

# Same but for 8 GPUs
  - name: Checkpoint8
    description: Test that checkpointing works for 8 GPUs
    cmakeFlag: 0
    cfgFile:   0008gpus.cfg
    post-run: *cpPostRun
  - name: Restart8
    description: Restart from the last checkpoint of Checkpoint8
    cmakeFlag: 0
    cfgFile:   0008gpusRestart.cfg
    dependency: Checkpoint8
    post-run: *restartPostRun
  - name: CheckpointCt8
    description: Test that checkpointing works for 8 GPUs (ParticleCounter)
    cmakeFlag: 1
    cfgFile:   0008gpus.cfg
    post-run: *cpPostRun
  - name: RestartCt8
    description: Restart from the last checkpoint of CheckpointCt8 (ParticleCounter)
    cmakeFlag: 1
    cfgFile:   0008gpusRestart.cfg
    dependency: CheckpointCt8
    post-run: *restartPostRun
  - name: HDF5FieldInterpolator8
    description: Uses HDF5 files to interpolate the field between timesteps on 8 GPUs
    cmakeFlag: 2
    cfgFile:   0008gpusHDF5Field.cfg
    pre-run: *createHDF5Field
    post-run: *validateHDF5Field

