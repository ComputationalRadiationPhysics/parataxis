#pragma once

#include "math/vector/compile-time/UInt32.hpp"

#ifndef PARAM_OFFSET_X
#   define PARAM_OFFSET_X 31
#endif
#ifndef PARAM_CUBE_Y
#   define PARAM_CUBE_Y 31
#endif
#ifndef PARAM_CUBE_Z
#   define PARAM_CUBE_Z 31
#endif
#ifndef PARAM_GENERATOR
#   define PARAM_GENERATOR Cuboid
#endif

namespace xrt {
namespace initialDensity {

    namespace AvailableGenerators{

        /** Cuboid in 3D or rectangle in 2D */
        struct Cuboid
        {
            using Offset = PMacc::math::CT::UInt32<
                    /** Offset in cells in x-direction */
                    PARAM_OFFSET_X
                    /** Offset in cells in y-direction */,
                    PARAM_CUBE_Y
                    /** Offset in cells in z-direction */,
                    PARAM_CUBE_Z
                    >;
            using Size = PMacc::math::CT::UInt32<
                    /** Size in cells in x-direction */
                    1
                    /** Size in cells in y-direction */,
                    1
                    /** Size in cells in z-direction */,
                    1
                    >;
            /** Value used */
            static constexpr float_64 value = 1;
        };
        struct RaisingLine
        {
            /** Dimension in which the line extents (1=y, 2=z) */
            static constexpr uint32_t nDim = 1;
            static constexpr size_t offsetX = PARAM_OFFSET_X;
            static constexpr size_t offsetOther = 10;
        };
    };

    using Generator =
            /** Generator used */
            AvailableGenerators::PARAM_GENERATOR;

}  // namespace initialDensity
}  // namespace xrt
