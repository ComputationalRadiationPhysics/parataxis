/**
 * Copyright 2015-2016 Alexander Grund
 *
 * This file is part of ParaTAXIS.
 *
 * ParaTAXIS is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ParaTAXIS is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ParaTAXIS.  If not, see <http://www.gnu.org/licenses/>.
 */
 
#pragma once

#include <math/Vector.hpp>
#include <mappings/kernel/MappingDescription.hpp>

namespace parataxis {

    constexpr uint32_t KiB = 1024;
    constexpr uint32_t MiB = 1024 * KiB;

    /* We have to hold back 350MiB for GPU-internal operations:
     *   - random number generator
     *   - reduces
     *   - ...
     */
    constexpr size_t reservedGPUMemorySize = 500 * MiB;

    namespace mCT=PMacc::math::CT;
    /** size of a superCell
     * volume of a superCell must be <= 1024
     */
    using SuperCellSize = typename PMacc::math::CT::shrinkTo<mCT::Int<4, 8, 8>, simDim>::type;
    using MappingDesc = PMacc::MappingDescription<simDim, SuperCellSize>;

    //! how many bytes for buffer is reserved to communication in one direction
    namespace exchangeSize {

        constexpr uint32_t X      = 1  * MiB;
        constexpr uint32_t Y      = 3  * MiB;
        constexpr uint32_t Z      = 1  * MiB;
        constexpr uint32_t Corner = 8  * KiB;
        constexpr uint32_t Edges  = 32 * KiB;

    }  // namespace exchangeSize

}  // namespace parataxis

